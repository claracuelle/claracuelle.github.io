---
import { Image } from 'astro:assets';
import Link from './Link.astro';

import { getCollection } from 'astro:content';

interface Props {
  overtitle?: string;
  title?: string;
  subtitle?: string;
  links?: Array<{ href: string; title: string }>;
}

const {
  overtitle = 'Portfolio',
  title = 'Clara Cuelle',
  subtitle = 'Directrice artistique digital et web designer Ã  Paris',
  links = [
    {
      title: 'LinkedIn',
      href: 'https://www.linkedin.com/in/clara-cuelle-3a466b122/',
    },
    { title: 'Instagram', href: 'https://www.instagram.com/claracuelle/' },
  ],
} = Astro.props;

const allProjects = await getCollection('projects');
const projectsToShow = allProjects.filter((project) => project.data.hero);
---

<section
  class='min-h-[75dvh] text-expo-primary overflow-hidden pb-[var(--bottom-spacing-mobile)] lg:pb-[var(--bottom-spacing-desktop)]'
  style='--left-pos-mobile: calc(((100% + (1rem * 2)) - 100%) / 2);--left-pos-desktop: calc(((100% + (6rem * 3)) - 100%) / 2);--bottom-spacing-mobile: calc(50% * (90 / 300));--bottom-spacing-desktop: calc(25% * (90 / 300));'
>
  <div
    class='relative grid gap-16 grid-rows-[auto_1fr_auto] bg-expo-secondary w-full'
  >
    <div
      class={`absolute top-0 -left-[var(--left-pos-mobile)] lg:-left-[var(--left-pos-desktop)] gap-4 lg:gap-24 w-full ${projectsToShow.length < 8 ? 'hidden' : 'flex'}`}
    >
      {
        projectsToShow?.slice(0, 4).map((project, index) => {
          if (project && project.data.images.hero) {
            const image = project.data.images.hero.src;
            const alt = project.data.images.hero.alt;
            return (
              <Image 
                loading={'lazy'}
                class={`w-1/3 lg:w-1/4 aspect-[300/180] ${index > 2 ? 'hidden lg:block' : ''}`}
                src={image}
                alt={alt}
                width={300}
                height={180}
              />
            );
          }
        })
      }
    </div>
    <div class='aspect-[300/180] w-1/2 lg:w-1/4'></div>
    <div
      class='flex flex-col justify-center items-center text-center w-full px-4 lg:px-16'
    >
      <h3 class='uppercase font-medium'>{overtitle}</h3>
      <h1 class='uppercase font-migra text-7xl lg:text-9xl'>{title}</h1>
      <h2 class='uppercase font-medium text-lg lg:text-2xl'>{subtitle}</h2>
      <div
        class={`flex flex-col gap-3 items-end w-full mt-5 ${links.length === 0 ? 'hidden' : ''}`}
      >
        {
          links?.map((link) => (
            <Link href={link.href} title={link.title}/>
          ))
        }
      </div>
    </div>
    <div class='aspect-[300/90] w-1/2 lg:w-1/4'></div>
    <div
      class={`absolute bottom-0 translate-y-1/2 -left-[var(--left-pos-mobile)] lg:-left-[var(--left-pos-desktop)] gap-4 lg:gap-24 w-full ${projectsToShow.length < 8 ? 'hidden' : 'flex'}`}
    >
      {
        projectsToShow?.slice(3, 8).map((project, index) => {
          if (project) {
            const image = project.data.images.hero.src;
            const alt = project.data.images.hero.alt;
            return (
              <Image
                loading={'lazy'}
                class={`w-1/3 lg:w-1/4 aspect-[300/180] ${index > 2 ? 'hidden lg:block' : ''}`}
                src={image}
                alt={alt}
                width={300}
                height={180}
              />
            );
          }
        })
      }
    </div>
  </div>
</section>
